@import 'stylesheets/config.less';

////////////
// LAYOUT //
////////////
body {
	.widths(12);
	#rhythmless > .rhythm-margin-top(1); // add a margin to the top, using a value which works nicely with our vertical rhythm
}

.page {
	.grid();
}

header, section {
	.column(12);
}

.first {
	.column(6);
}
.second {
	.column(6);
}

.alpha {
	.column(1);
}
.beta {
	.column(11,12);
}
.gamma {
	.column(2);
}
.delta {
	.column(10,12);
}
.epsilon {
	.column(3);
}
.zeta {
	.column(9,12);
}
.eta {
	.column(4);
}
.theta {
	.column(8,12);
}
.iota {
	.column(5);
}
.kappa {
	.column(7,12);
}
.lambda {
	.column(4);
}
.mu {
.column(2);
}
.nu {
	.column(6,12);
}

.push-example {
	.column(6);
	.push(3,12);
}

.first-row, .nest {

	.nested1 {
		.column(2)
	}
	.nested2 {
		.column(2);
		.col-equal();
		}
	.nested3 {
		.column(8);
		.col-equal();
		aside {
			.column(4,8);
		}
		article {
			.column(4,8);
		}
	}
}

.first-row {
	.row(12);
}
	
.second-row {
	.row(8);
}

.intro {
	.column(12);	
}

.box {
	.column(3,12);
}

footer {
	.column(12);
}

// media queries for adaptive design (pixel based). Note how you have to redefine each element for each media query  to take into account that there is only x columns available :(
// First Media Query for Screens smaller than 960px
@media screen and (max-width: 960px) {
	body {
		.widths(8);
	}
	
	.page {
		.grid(8);
	}

	header, section {
		.column(8);
	}

	.first {
		.column(4);
	}
	.second {
		.column(4);
	}
	
	.alpha {
	.column(1);
}

.beta {
	.column(7);
}

.gamma {
	.column(2);
}

.delta {
	.column(6);
}

.epsilon {
	.column(3);
}

.zeta {
	.column(5);
}

.eta {
	.column(4);
}

.theta {
	.column(4);
}
	
	.iota {
		.column(5);
	}

	.kappa {
		.column(3);
	}

	.lambda {
		.column(3);
	}
	
	.mu {
		.column(1);
	}

	.nu {
		.column(4,8);
	}
	
	.push-example {
		.column(4);
		.push(2,8);
	}
	
	.first-row, .nest {
		.nested1 {
			.column(2)
		}
		.nested2 {
			.column(2);
			.col-equal-remove(); // remove the equal column
			#rhythmless > .rhythm-margin-bottom(1); // after the .col-equl-remove has set the margin to 0px we set it to our vertical rhythm
		}
		.nested3 {
			.column(4);
			.col-equal-remove(); // remove the equal column
			#rhythmless > .rhythm-margin-bottom(1); // after the .col-equl-remove has set the margin to 0px we set it to our vertical rhythm
			aside {
				.column(2);
			}
			article {
				.column(2);
			}
		}
	}
	
	.first-row {
		.row(8);
	}
		
	.second-row {
		.row(4);
	}

	.intro {
		.column(8);	
	}

	.box {
		.column(4,8);
	}

	footer {
		.column(8);
	}
}
// Second Media Query for Screens smaller than 650x
@media screen and (max-width: 650px) {
	body {
		.widths(4);
	}
	
	.page {
		.grid(4);
	}

	header, section {
		.column(4);
	}

	.first {
		.column(4);
	}
	.second {
		.column(4);
	}
	
	.alpha {
		.column(4);
	}
	.beta {
		.column(4);
	}
	.gamma {
		.column(4);
	}
	.delta {
		.column(4);
	}
	.epsilon {
		.column(4);
	}
	.zeta {
		.column(4);
	}
	.eta {
		.column(4);
	}
	.theta {
		.column(4);
	}
	.iota {
		.column(4);
	}
	.kappa {
		.column(4);
	}
	.lambda {
		.column(4);
	}
	.mu {
		.column(4);
	}
	.nu {
		.column(4);
	}
	
	.push-example {
		.column(4);
		.push(0);
	}
	
	.first-row {
		.nested1 {
			.column(4)
		}
		.nested2 {
			.column(4);
		}
		.nested3 {
			.column(4);
			aside {
				.column(4);
			}
			article {
				.column(4);
			}
		}
	}
	
	.first-row {
		.row(4);
	}
		
	.second-row {
		.row(4);
	}

	.intro {
		.column(4);	
	}

	.box {
		.column(4);
	}

	footer {
		.column(4);
	}
}